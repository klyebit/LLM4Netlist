{'NL-BLIF': {'Instruction': 'Please act as a professional BLIF designer. Create a module that implements a 4-bit adder with overflow detection. The module should have three inputs, A, B, and Cin, and two outputs, Sum and Cout. The Sum output should be the 4-bit addition of A, B, and Cin. The Cout output should be set to 1 if the addition of A, B, and Cin results in a 5-bit number, indicating an overflow. Otherwise, Cout should be set to 0.',
  'Respone': '\n.model adder_with_overflow_detection \n\n.inputs top^A~0 top^A~1 top^A~2 top^A~3 top^B~0 top^B~1 top^B~2 top^B~3 top^Cin \n\n.outputs top^Sum~0 top^Sum~1 top^Sum~2 top^Sum~3 top^Cout \n\n.names top^A~0 top^B~0 top^Cin top^Sum~0 \n001 1 \n010 1 \n100 1 \n111 1 \n\n.names top^A~0 top^B~0 top^Cin top^A~1 top^B~1 top^Sum~1 \n-0001 1 \n-0010 1 \n-1100 1 \n-1111 1 \n0-001 1 \n0-010 1 \n00-01 1 \n00-10 1 \n1-100 1 \n1-111 1 \n11-00 1 \n11-11 1 \n\n.names n19 n20 top^A~2 top^B~2 top^Sum~2 \n0001 1 \n0010 1 \n0100 1 \n0111 1 \n1000 1 \n1011 1 \n1101 1 \n1110 1 \n\n.names top^A~0 top^A~1 top^B~1 top^B~0 top^Cin n19 \n00111 1 \n01011 1 \n10101 1 \n11001 1 \n\n.names top^A~1 top^B~1 top^B~0 top^A~0 n20 \n-111 1 \n1-11 1 \n11-- 1 \n\n.names n19 n20 top^A~2 top^B~2 top^A~3 top^B~3 top^Sum~3 \n-00001 1 \n-00010 1 \n-01100 1 \n-01111 1 \n-10100 1 \n-10111 1 \n-11000 1 \n-11011 1 \n0-0001 1 \n0-0010 1 \n0-1100 1 \n0-1111 1 \n00-001 1 \n00-010 1 \n000-01 1 \n000-10 1 \n1-0100 1 \n1-0111 1 \n1-1000 1 \n1-1011 1 \n11-000 1 \n11-011 1 \n111101 1 \n111110 1 \n\n.names top^Cout \n0 \n\n.end \n'},}
